name: Publish new package into test pypi

on:
  push:
    tags:
      - 'v*.*.*d'

jobs:
  build_manylinux:
    name: Build for manylinux2010
    runs-on: ubuntu-latest
    container:
      image: docker://quay.io/pypa/manylinux2010_x86_64

    steps:        
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Deploy
      continue-on-error: True
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        mkdir include
        git clone https://gitlab.com/libeigen/eigen
        cd eigen
        git checkout tags/3.4.0
        cd ..
        mv eigen/Eigen include
        git clone https://github.com/bab2min/EigenRand
        cd EigenRand
        git checkout tags/v0.5.0
        cd ..
        mv EigenRand/EigenRand include/

        yum install libffi-devel -y
        /opt/python/cp39-cp39/bin/python -m pip install --upgrade pip setuptools
        /opt/python/cp39-cp39/bin/python -m pip install "cryptography<38" "twine<4" wheel numpy==`/opt/python/cp39-cp39/bin/python .github/workflows/numpy_version.py`
        /opt/python/cp39-cp39/bin/python setup.py sdist
        /opt/python/cp39-cp39/bin/python -m twine upload --repository testpypi dist/*.tar.gz
        for cp in cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39
        do
          /opt/python/${cp}/bin/python -m pip install wheel numpy==`/opt/python/${cp}/bin/python .github/workflows/numpy_version.py`
          /opt/python/${cp}/bin/python setup.py build bdist_wheel
          auditwheel repair dist/*-${cp}-linux_x86_64.whl
        done
        /opt/python/cp39-cp39/bin/python -m twine upload --repository testpypi wheelhouse/*.whl

  build_manylinux2014:
    name: Build for manylinux2014
    runs-on: ubuntu-latest
    container:
      image: docker://quay.io/pypa/manylinux2014_x86_64

    steps:        
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Deploy
      continue-on-error: True
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        mkdir include
        git clone https://gitlab.com/libeigen/eigen
        cd eigen
        git checkout tags/3.4.0
        cd ..
        mv eigen/Eigen include
        git clone https://github.com/bab2min/EigenRand
        cd EigenRand
        git checkout tags/v0.5.0
        cd ..
        mv EigenRand/EigenRand include/

        yum install libffi-devel -y
        /opt/python/cp311-cp311/bin/python -m pip install --upgrade pip setuptools
        /opt/python/cp311-cp311/bin/python -m pip install twine wheel numpy==`/opt/python/cp311-cp311/bin/python .github/workflows/numpy_version.py`
        for cp in cp310-cp310 cp311-cp311
        do
          /opt/python/${cp}/bin/python -m pip install wheel numpy==`/opt/python/${cp}/bin/python .github/workflows/numpy_version.py`
          /opt/python/${cp}/bin/python setup.py build bdist_wheel
          auditwheel repair dist/*-${cp}-linux_x86_64.whl
        done
        /opt/python/cp311-cp311/bin/python -m twine upload --repository testpypi wheelhouse/*.whl

  build_macos_11:
    name: Build for macOS 11
    runs-on: macOS-11
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9, "3.10", 3.11]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        lfs: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Deploy
      continue-on-error: True
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        mkdir include
        git clone https://gitlab.com/libeigen/eigen
        cd eigen
        git checkout tags/3.4.0
        cd ..
        mv eigen/Eigen include
        git clone https://github.com/bab2min/EigenRand
        cd EigenRand
        git checkout tags/v0.5.0
        cd ..
        mv EigenRand/EigenRand include/

        python -m pip install twine wheel numpy==`python .github/workflows/numpy_version.py`
        MACOSX_DEPLOYMENT_TARGET=10.15 CG_CPU_ARCH=x86_64 python setup.py bdist_wheel
        twine upload --repository testpypi dist/*

  build_windows_x86:
    name: Build for Windows x86
    runs-on: windows-2019
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        architecture: [x86]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        lfs: true
    - name: Set up Python ${{ matrix.python-version }} ${{ matrix.architecture }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}
    - name: Deploy
      continue-on-error: True
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        mkdir include
        git clone https://gitlab.com/libeigen/eigen
        cd eigen
        git checkout tags/3.4.0
        cd ..
        mv eigen/Eigen include
        git clone https://github.com/bab2min/EigenRand
        cd EigenRand
        git checkout tags/v0.5.0
        cd ..
        mv EigenRand/EigenRand include/

        python -m pip install --upgrade pip setuptools
        python -m pip install twine wheel numpy==$(python .github/workflows/numpy_version.py)
        python setup.py bdist_wheel
        twine upload --repository testpypi dist/*

  build_windows_x64:
    name: Build for Windows x64
    runs-on: windows-2019
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, "3.10", 3.11]
        architecture: [x64]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        lfs: true
    - name: Set up Python ${{ matrix.python-version }} ${{ matrix.architecture }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}
    - name: Deploy
      continue-on-error: True
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        mkdir include
        git clone https://gitlab.com/libeigen/eigen
        cd eigen
        git checkout tags/3.4.0
        cd ..
        mv eigen/Eigen include
        git clone https://github.com/bab2min/EigenRand
        cd EigenRand
        git checkout tags/v0.5.0
        cd ..
        mv EigenRand/EigenRand include/

        python -m pip install --upgrade pip setuptools
        python -m pip install twine wheel numpy==$(python .github/workflows/numpy_version.py)
        python setup.py bdist_wheel
        twine upload --repository testpypi dist/*
